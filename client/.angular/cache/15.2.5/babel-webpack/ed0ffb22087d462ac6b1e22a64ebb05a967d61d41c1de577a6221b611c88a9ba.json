{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BodegaService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:3000/bodegas';\n  }\n  getBodegas() {\n    return this.http.get(this.url);\n  }\n  addBodega(bodega) {\n    return this.http.post(this.url, bodega);\n  }\n  deleteBodega(bodegaId) {\n    const url = `${this.url}/${bodegaId}`;\n    return this.http.delete(url);\n  }\n}\nBodegaService.ɵfac = function BodegaService_Factory(t) {\n  return new (t || BodegaService)(i0.ɵɵinject(i1.HttpClient));\n};\nBodegaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BodegaService,\n  factory: BodegaService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,aAAa;EAIxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,QAAG,GAAG,+BAA+B;EAEL;EAExCC,UAAU;IACR,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAW,IAAI,CAACC,GAAG,CAAC;EAC1C;EAEAC,SAAS,CAACC,MAAc;IACtB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAU,IAAI,CAACH,GAAG,EAAGE,MAAM,CAAC;EACnD;EAEAE,YAAY,CAACC,QAAa;IACxB,MAAML,GAAG,GAAG,GAAG,IAAI,CAACA,GAAG,IAAIK,QAAQ,EAAE;IACrC,OAAO,IAAI,CAACR,IAAI,CAACS,MAAM,CAASN,GAAG,CAAC;EAEtC;;AAlBWL,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAY,SAAbZ,aAAa;EAAAa,YAFZ;AAAM","names":["BodegaService","constructor","http","getBodegas","get","url","addBodega","bodega","post","deleteBodega","bodegaId","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/gabriel/Desktop/Angular Projects/Bodegas/src/app/pages/bodegas/services/bodegas.services.ts"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpParamsOptions } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Bodega } from '../interfaces/bodegas.interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BodegaService {\n\n  private url = 'http://localhost:3000/bodegas';\n\n  constructor(private http: HttpClient) { }\n\n  getBodegas(): Observable<Bodega[]> {\n    return this.http.get<Bodega[]>(this.url);\n  }\n\n  addBodega(bodega: Bodega): Observable<Bodega> {\n    return this.http.post<Bodega>((this.url), bodega)\n  }\n\n  deleteBodega(bodegaId: any): Observable<Bodega> {\n    const url = `${this.url}/${bodegaId}`;\n    return this.http.delete<Bodega>(url);\n\n  }\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}